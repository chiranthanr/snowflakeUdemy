// Different ways to cluster a table
// 1. CREATE TABLE <name> CLUSTER BY ('column1')
// 2. CREATE TABLE <name> CLUSTER BY (<expression> e.g. MONTH('column1'))
// 3. ALTER TABLE <name> CLUSTER BY ('column1'<or> <expression>)
// To drop a cluster key - ALTER TABLE <name> DROP CLUSTERING KEY

// Clustering example using ORDERS data imported from AWS stage

USE MANAGED_DB.PUBLIC

CREATE OR REPLACE TABLE ORDERS (
    ORDER_ID VARCHAR,
    AMOUNT INT,
    PROFIT INT,
    QUANTITY INT,
    CATEGORY VARCHAR,
    SUBCATEGORY VARCHAR
);

DESC STAGE MANAGED_DB.EXTERNAL_STAGES.AWS_STAGE
LIST @MANAGED_DB.EXTERNAL_STAGES.AWS_STAGE


COPY INTO ORDERS
FROM @MANAGED_DB.EXTERNAL_STAGES.AWS_STAGE
    file_format = (type='csv' field_delimiter=',' skip_header=1)
    pattern = '.*Order.*'

SHOW TABLES

CREATE OR REPLACE TABLE ORDERS_CACHING(
    ORDER_ID varchar,
    AMOUNT number,
    PROFIT number,
    QUANTITY number,
    CATEGORY varchar,
    SUBCATEGORY varchar,
    DATE DATE
)

INSERT INTO ORDERS_CACHING
SELECT 
t1.ORDER_ID,
t1.AMOUNT,
t1.PROFIT,
t1.QUANTITY,
t1.CATEGORY,
t1.SUBCATEGORY,
DATE(UNIFORM(1500000000,1700000000,(RANDOM())))
FROM ORDERS t1
CROSS JOIN (SELECT * FROM ORDERS) t2
CROSS JOIN (SELECT TOP 100 * FROM ORDERS) t3

SELECT * FROM ORDERS_CACHING
WHERE DATE = '2021-08-010'

ALTER TABLE ORDERS_CACHING CLUSTER BY (MONTH(DATE)=8)